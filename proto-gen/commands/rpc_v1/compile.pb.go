// Code generated by protoc-gen-go. DO NOT EDIT.
// source: commands/rpc_v1/compile.proto

package rpc_v1

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type CompileReq struct {
	Instance *Instance `protobuf:"bytes,1,opt,name=instance,proto3" json:"instance,omitempty"`
	// Fully Qualified Board Name, e.g.: arduino:avr:uno.
	Fqbn       string `protobuf:"bytes,2,opt,name=fqbn,proto3" json:"fqbn,omitempty"`
	SketchPath string `protobuf:"bytes,3,opt,name=sketchPath,proto3" json:"sketchPath,omitempty"`
	// Show all build preferences used instead of compiling.
	ShowProperties bool `protobuf:"varint,4,opt,name=showProperties,proto3" json:"showProperties,omitempty"`
	// Print preprocessed code to stdout.
	Preprocess bool `protobuf:"varint,5,opt,name=preprocess,proto3" json:"preprocess,omitempty"`
	// Builds of 'core.a' are saved into this path to be cached and reused.
	BuildCachePath string `protobuf:"bytes,6,opt,name=buildCachePath,proto3" json:"buildCachePath,omitempty"`
	// Path where to save compiled files.
	BuildPath string `protobuf:"bytes,7,opt,name=buildPath,proto3" json:"buildPath,omitempty"`
	// List of custom build properties separated by commas. Or can be used
	// multiple times for multiple properties.
	BuildProperties []string `protobuf:"bytes,8,rep,name=buildProperties,proto3" json:"buildProperties,omitempty"`
	// Used to tell gcc which warning level to use.
	Warnings string `protobuf:"bytes,9,opt,name=warnings,proto3" json:"warnings,omitempty"`
	// Turns on verbose mode.
	Verbose bool `protobuf:"varint,10,opt,name=verbose,proto3" json:"verbose,omitempty"`
	// Suppresses almost every output.
	Quiet bool `protobuf:"varint,11,opt,name=quiet,proto3" json:"quiet,omitempty"`
	// VID/PID specific build properties.
	VidPid string `protobuf:"bytes,12,opt,name=vidPid,proto3" json:"vidPid,omitempty"`
	// The compiled binary is written to this file.
	ExportFile           string   `protobuf:"bytes,13,opt,name=exportFile,proto3" json:"exportFile,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CompileReq) Reset()         { *m = CompileReq{} }
func (m *CompileReq) String() string { return proto.CompactTextString(m) }
func (*CompileReq) ProtoMessage()    {}
func (*CompileReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_02fb106927d1a068, []int{0}
}

func (m *CompileReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CompileReq.Unmarshal(m, b)
}
func (m *CompileReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CompileReq.Marshal(b, m, deterministic)
}
func (m *CompileReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CompileReq.Merge(m, src)
}
func (m *CompileReq) XXX_Size() int {
	return xxx_messageInfo_CompileReq.Size(m)
}
func (m *CompileReq) XXX_DiscardUnknown() {
	xxx_messageInfo_CompileReq.DiscardUnknown(m)
}

var xxx_messageInfo_CompileReq proto.InternalMessageInfo

func (m *CompileReq) GetInstance() *Instance {
	if m != nil {
		return m.Instance
	}
	return nil
}

func (m *CompileReq) GetFqbn() string {
	if m != nil {
		return m.Fqbn
	}
	return ""
}

func (m *CompileReq) GetSketchPath() string {
	if m != nil {
		return m.SketchPath
	}
	return ""
}

func (m *CompileReq) GetShowProperties() bool {
	if m != nil {
		return m.ShowProperties
	}
	return false
}

func (m *CompileReq) GetPreprocess() bool {
	if m != nil {
		return m.Preprocess
	}
	return false
}

func (m *CompileReq) GetBuildCachePath() string {
	if m != nil {
		return m.BuildCachePath
	}
	return ""
}

func (m *CompileReq) GetBuildPath() string {
	if m != nil {
		return m.BuildPath
	}
	return ""
}

func (m *CompileReq) GetBuildProperties() []string {
	if m != nil {
		return m.BuildProperties
	}
	return nil
}

func (m *CompileReq) GetWarnings() string {
	if m != nil {
		return m.Warnings
	}
	return ""
}

func (m *CompileReq) GetVerbose() bool {
	if m != nil {
		return m.Verbose
	}
	return false
}

func (m *CompileReq) GetQuiet() bool {
	if m != nil {
		return m.Quiet
	}
	return false
}

func (m *CompileReq) GetVidPid() string {
	if m != nil {
		return m.VidPid
	}
	return ""
}

func (m *CompileReq) GetExportFile() string {
	if m != nil {
		return m.ExportFile
	}
	return ""
}

func init() {
	proto.RegisterType((*CompileReq)(nil), "rpc_v1.CompileReq")
}

func init() { proto.RegisterFile("commands/rpc_v1/compile.proto", fileDescriptor_02fb106927d1a068) }

var fileDescriptor_02fb106927d1a068 = []byte{
	// 337 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x5c, 0x91, 0xcb, 0x6e, 0xab, 0x30,
	0x10, 0x86, 0xc5, 0x49, 0x42, 0x60, 0x72, 0x6e, 0xb2, 0x8e, 0x8e, 0xac, 0xf4, 0x22, 0xd4, 0x45,
	0xc5, 0xa2, 0x01, 0xa5, 0x7d, 0x83, 0x46, 0xaa, 0xd4, 0x5d, 0xc4, 0xb2, 0x9b, 0x0a, 0xcc, 0x34,
	0x58, 0x05, 0xdb, 0xb1, 0x4d, 0xd2, 0xbe, 0x52, 0x9f, 0xb2, 0x8a, 0xc9, 0x4d, 0xac, 0xe0, 0xff,
	0xfc, 0xcf, 0x3f, 0x63, 0x0f, 0x5c, 0x31, 0xd9, 0x34, 0xb9, 0x28, 0x4d, 0xaa, 0x15, 0x7b, 0xdd,
	0xcc, 0x53, 0x26, 0x1b, 0xc5, 0x6b, 0x4c, 0x94, 0x96, 0x56, 0x12, 0xbf, 0xa3, 0xd3, 0x8b, 0xbe,
	0xcd, 0x7e, 0x2a, 0x34, 0x9d, 0xe9, 0xe6, 0x6b, 0x00, 0xb0, 0xe8, 0xca, 0x32, 0x5c, 0x93, 0x3b,
	0x08, 0xb8, 0x30, 0x36, 0x17, 0x0c, 0xa9, 0x17, 0x79, 0xf1, 0xe4, 0xfe, 0x6f, 0xd2, 0x55, 0x25,
	0xcf, 0x7b, 0x9e, 0x1d, 0x1d, 0x84, 0xc0, 0xf0, 0x6d, 0x5d, 0x08, 0xfa, 0x23, 0xf2, 0xe2, 0x30,
	0x73, 0xff, 0xe4, 0x1a, 0xc0, 0xbc, 0xa3, 0x65, 0xd5, 0x32, 0xb7, 0x15, 0x1d, 0xb8, 0x93, 0x33,
	0x42, 0x6e, 0xe1, 0xb7, 0xa9, 0xe4, 0x76, 0xa9, 0xa5, 0x42, 0x6d, 0x39, 0x1a, 0x3a, 0x8c, 0xbc,
	0x38, 0xc8, 0x7a, 0x74, 0x97, 0xa3, 0x34, 0x2a, 0x2d, 0x19, 0x1a, 0x43, 0x47, 0xce, 0x73, 0x46,
	0x76, 0x39, 0x45, 0xcb, 0xeb, 0x72, 0x91, 0xb3, 0x0a, 0x5d, 0x2f, 0xdf, 0xf5, 0xea, 0x51, 0x72,
	0x09, 0xa1, 0x23, 0xce, 0x32, 0x76, 0x96, 0x13, 0x20, 0x31, 0xfc, 0xe9, 0xc4, 0x69, 0x9c, 0x20,
	0x1a, 0xc4, 0x61, 0xd6, 0xc7, 0x64, 0x0a, 0xc1, 0x36, 0xd7, 0x82, 0x8b, 0x95, 0xa1, 0xa1, 0x8b,
	0x39, 0x6a, 0x42, 0x61, 0xbc, 0x41, 0x5d, 0x48, 0x83, 0x14, 0xdc, 0xa0, 0x07, 0x49, 0xfe, 0xc1,
	0x68, 0xdd, 0x72, 0xb4, 0x74, 0xe2, 0x78, 0x27, 0xc8, 0x7f, 0xf0, 0x37, 0xbc, 0x5c, 0xf2, 0x92,
	0xfe, 0x74, 0x49, 0x7b, 0xb5, 0xbb, 0x33, 0x7e, 0x28, 0xa9, 0xed, 0x13, 0xaf, 0x91, 0xfe, 0xea,
	0xde, 0xee, 0x44, 0x1e, 0xe7, 0x2f, 0xe9, 0x8a, 0xdb, 0xaa, 0x2d, 0x12, 0x26, 0x9b, 0x34, 0xd7,
	0x65, 0xcb, 0x85, 0x3c, 0x7c, 0x67, 0xac, 0xe6, 0xa9, 0x5b, 0xea, 0x6c, 0x85, 0x62, 0xbf, 0xeb,
	0xc2, 0x77, 0xe4, 0xe1, 0x3b, 0x00, 0x00, 0xff, 0xff, 0x6c, 0x5e, 0x3f, 0x26, 0x2c, 0x02, 0x00,
	0x00,
}
